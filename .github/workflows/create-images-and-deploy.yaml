name: Create docker images and deploy
run-name: Create docker images and deploy
on: push
env:
  KAYTTAJA: ${{ vars.PINGPONG_KAYTTAJA }}
  PP_DOMAIN: ${{ vars.PINGPONG_DOMAIN }}
jobs:
  whole-shit:
    runs-on: ubuntu-latest
    steps:
      - name: Setup ssh
        run: |
                mkdir ~/.ssh
                echo "${{ secrets.PINGPONG_SSH_KEY }}" > ~/.ssh/id_ed25519
                sudo chmod 600 ~/.ssh/id_ed25519
                ssh-keyscan -H $PP_DOMAIN > ~/.ssh/known_hosts

      - name: Checkout
        uses: actions/checkout@v2

      - name: Build images
        run: | 
                docker build . -f docker/Dockerfile-front -t pingpong-front
                docker build . -f docker/Dockerfile-back -t pingpong-back
                mkdir ~/pingpong_workflow
                docker save pingpong-front -o ~/pingpong_workflow/pingpong-front.tar
                docker save pingpong-back -o ~/pingpong_workflow/pingpong-back.tar

      - name: Send images to server
        run: |
                rsync ~/pingpong_workflow/pingpong-front.tar $KAYTTAJA@$PP_DOMAIN:/root
                rsync ~/pingpong_workflow/pingpong-back.tar $KAYTTAJA@$PP_DOMAIN:/root
     
      - name: Run new containers
        run: | 
                ssh $KAYTTAJA@$PP_DOMAIN "docker load -i pingpong-front.tar; docker load -i pingpong-back.tar"
                ssh $KAYTTAJA@$PP_DOMAIN "docker container rm -f pingpong-front; docker container rm -f pingpong-back"
                ssh $KAYTTAJA@$PP_DOMAIN "docker run -d -p 8090:8090 --name pingpong-back pingpong-back"
                ssh $KAYTTAJA@$PP_DOMAIN "docker run -d -p 80:80 --name pingpong-front --add-host host.docker.internal:host-gateway pingpong-front"
                ssh $KAYTTAJA@$PP_DOMAIN "rm pingpong-front.tar pingpong-back.tar; docker system prune -a"
